<html>
<!--********************************************************************
'*
'*  File:           userdelete.htm
'*  Created:        Augustus 2004
'*  Version:        1.0
'*  Author:         Marcel Jussen
'*
'*  Description:    NedCar user Management scripts.  
'*
'*  Copyright (C) 2004 KPN Telecom
'*
'********************************************************************-->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<title>TEST</title>
<link href="css/nedcarum.css" rel="stylesheet" type="text/css" />

<SCRIPT Language="VBScript">
Option Explicit	

sub cleartbDeleteUsers
  do while tbDeleteUsers.Rows.Length > 0
    tbDeleteUsers.deleteRow(tbDeleteUsers.Rows.Length - 1)
  loop
end sub

sub cleartbDeleteProgress
  do while tbDeleteProgress.Rows.Length > 0
    tbDeleteProgress.deleteRow(tbDeleteProgress.Rows.Length - 1)
  loop
end sub

sub clearTables
  call cleartbDeleteUsers()
  call cleartbDeleteProgress()
end sub

sub clearForm
	UID.value = ""
end sub

'function to list the properties of a user-account
Sub doAddAccountToTable
	Dim Usr, sError, sTemp
	Dim rowNew, cellNew
	Dim strUserName, strFullname, strComment
	Dim bUIDExists
	dim nCount, nPos, blInvalid	
	
	' Capitalize the entire UID
	UID.value = Trim(UCase(UID.value))
	
	nCount = tbDeleteUsers.Rows.Length
	blInvalid = False
	for nPos = 0 to nCount-1
		strUserName = 	tbDeleteUsers.rows(nPos).cells(0).innertext
		if (strUserName = UID.value) and (blInvalid = False) then blInvalid = True
	next
	
	if (Len(UID.value) > 0) and (blInvalid=False) then
		bUIDExists = chkUIDExists(UID.value)		
		if bUIDExists = False then
			'this account does not exist!			
			call MsgBox("This account does not exist in the domain.", 16, "Error") 
		else
			strUserName = UID.value
			
			dim strDN
			strDN="LDAP://" & QueryAD_User(strUserName)
			
			dim objUser
			Set objUser = GetObject(strDN)
			if err.number<0 then
				err.Clear
				call MsgBox("Could not find user " & strUserName & " in the domain.", vbCritical, "Error") 
				
				' Add log entry
				AddToLog(strUserName & " could not be found.")
			else						
			
				' Get account properties
				strFullName = objUser.displayName
				strComment = objUser.description
					
				'Show info
				set rowNew = tbDeleteUsers.InsertRow()				
				set cellNew = rowNew.InsertCell()
				cellnew.innerText = strUsername
		
				set cellNew = rowNew.InsertCell()
				cellnew.innerText = strDN 
			
				set cellNew = rowNew.InsertCell()
				cellnew.innerText = strFullname
				
				set cellNew = rowNew.InsertCell()
				cellnew.innerText = strComment
			End If
		End if
	Else
		' Show an error message 
		if blInvalid then
			call MsgBox("User " & strUserName & " already exists in the table.", 16, "Error") 
			UID.value = ""
			call UID.focus()
		else
			call MsgBox("Please enter a valid userid!", 16, "Error") 
		end if
	End If
end sub

sub doDeleteUsers
	Dim Usr, sError, sTemp
	Dim nCount, nPos
	Dim rowNew, cellNew
	Dim strUserName, strFullname, strComment
	
	call cleartbDeleteProgress()	
	
	nCount = tbDeleteUsers.Rows.Length
	for nPos = 0 to nCount-1
		' collect stored information from DHTML table
		strUserName = tbDeleteUsers.rows(nPos).cells(0).innertext
		strFullname = tbDeleteUsers.rows(nPos).cells(1).innertext
		strComment = tbDeleteUsers.rows(nPos).cells(2).innertext
			
		' Delete account in the domain		
		if (chkUIDExists(strUserName) = True) then
											
			' Delete CitrixProfile 
			set rowNew = tbDeleteProgress.InsertRow()
			set cellNew = rowNew.InsertCell()
			cellnew.innerText = "Removing Citrix profile."
			set cellNew = rowNew.InsertCell()
			cellnew.innerText = "Waiting...."
			
			call deleteCitrixProfile(strUserName) 			
			cellnew.innerText = "Citrix profile was removed."
			
			' Delete homedirectory 			
			set rowNew = tbDeleteProgress.InsertRow()
			set cellNew = rowNew.InsertCell()
			cellnew.innerText = "Removing home directory."
			set cellNew = rowNew.InsertCell()
			cellnew.innerText = "Waiting...."
			
			call deleteHomeShare(strUserName)			
			cellnew.innerText = "Home directory was removed."
			
			' Delete account in the domain
			set rowNew = tbDeleteProgress.InsertRow()
			set cellNew = rowNew.InsertCell()
			cellnew.innerText = "Deleting account " & strFullname
			set cellNew = rowNew.InsertCell()
			cellnew.innerText = "waiting...."
			
			call deleteUID(strUserName)
			
			cellnew.innerText = "Ok."
			AddToLog("Account " & strUserName & " was removed.")
			call MsgBox("The account " & strUsername & " was removed", vbExclamation, "Info")			

		else
			call MsgBox("This account does not exists in the domain.", 16, "Error") 
			cellnew.innerText = "ERROR: The account " & strUsername & " does not exist in the domain." 
		end if		
		
		set rowNew = tbDeleteProgress.InsertRow()
		set cellNew = rowNew.InsertCell()
		cellnew.innerText = "Ready removing account " & strUserName
		set cellNew = rowNew.InsertCell()
		cellnew.innerText = "Done."
	next
	
	call cleartbDeleteUsers()
end sub

Sub Output(strField, strValue)
	dim rowNew, cellNew
	set rowNew = tbUserinfo.InsertRow()
	set cellNew = rowNew.InsertCell()
	cellnew.innerText = strField
	set cellNew = rowNew.InsertCell()
	cellnew.innerText = strValue
End Sub

'- FOLDERS and SHARES -------------------------------
'function to check if a folder exists
Function chkFolderExists(sFolder)
	dim fso, bResult
	set fso = CreateObject("Scripting.FileSystemObject")
	if isEmpty(sfolder) then
		bResult = False 
	else 
		bResult = fso.FolderExists(sFolder)
	end if
	chkFolderExists = bResult
End Function

'function to check if a share exists (calls chkFolderExists)
Function chkShareExists(sShare)
	chkShareExists = chkFolderExists(sShare)
End Function

Function deleteHomeShare(strUserName)
	dim strCommand, strParms
	Dim wshell, intReturn
	
	' Add log entry
	AddToLog("Deleting home for " & strUserName)	
	
	strCommand = "deleteHomeShare.cmd " & strUserName
  set wshell = createobject("wscript.shell")
  intReturn = wshell.run("%comspec% /c " & strCommand, 0, True)
  
  ' Add log entry
	AddToLog("Home for " & strUserName & " was deleted.")
End Function

Function deleteCitrixProfile(strUserName)
	dim strCommand, strParms
	Dim wshell, intReturn
	
	' Add log entry
	AddToLog("Deleting Citrix profile for " & strUserName)	
	
	strCommand = "deleteCitrixProfile.cmd " & strUserName
	set wshell = createobject("wscript.shell")
  intReturn = wshell.run("%comspec% /c " & strCommand, 0, True)    		
  
  ' Add log entry
	AddToLog("Citrix profile for " & strUserName & " was deleted.")
End Function


'- ADSI ----------------------------------------------
'function to check if a UID exists in the domain
Function chkUIDExists(strUserName)
	dim bResult
	bResult=False
		
	dim objConnection
	Set objConnection = CreateObject("ADODB.Connection")
	objConnection.Open "Provider=ADsDSOObject;"
	
	'Get the ADsPath for the domain to search. 
	dim Root, sDomain
	Set Root = GetObject("LDAP://rootDSE")	
	sDomain = root.Get("rootDomainNamingContext")
	dim domain, sADSPath
	Set domain = GetObject("GC://" & sDomain)
	sADsPath = "<" & domain.ADsPath & ">"	
 
 	dim objCommand
	Set objCommand = CreateObject("ADODB.Command")
	objCommand.ActiveConnection = objConnection
 
	objCommand.CommandText = sADsPath & ";(&(objectCategory=User)" & _
         "(samAccountName=" & strUserName & "));samAccountName;subtree"
  
  dim objRecordSet
	Set objRecordSet = objCommand.Execute
 
	If objRecordset.RecordCount = 0 Then
  	bResult=False
	Else
    bResult=True
	End If
 
	objConnection.Close
	chkUIDExists = bResult
End Function

Function deleteUID(strUserName)		
	
	dim objConnection
	Set objConnection = CreateObject("ADODB.Connection")
	objConnection.Open "Provider=ADsDSOObject;"
	
	'Get the ADsPath for the domain to search. 
	dim Root, sDomain
	Set Root = GetObject("LDAP://rootDSE")	
	sDomain = root.Get("rootDomainNamingContext")
	
	' Container where the account is located. 
	dim sADSPath	
	sADsPath = "LDAP://cn=users," & sDomain	
		
	dim objUsr, strDN			
	strDN=QueryAD_User(strUserName)
		
	' Disable the account first. Account cannot be used even when delete fails.	
	AddToLog("Preemptive disabling of account " & strDN)			
	dim objUser
	Set objUser = GetObject("LDAP://" & strDN)
	objUser.accountdisabled = true
	
	' Add log entry
	AddToLog("Deleting useraccount " & strUserName & " at " & sADsPath)	

	dim objOU	
	Set objOU = GetObject(sADsPath)
	objOU.delete "user", "cn=" & strUsername
	
	AddToLog("Account " & strUserName & " at " & sADsPath & " was deleted.")	
		
End Function

Sub Wait(nSeconds)
	dim StartTime
	AddToLog("Start wait procedure for " & CStr(nSeconds) & " at " & CStr(Now()) )
	StartTime = cint(second(time))
	dim i
	i = 0     
  Do 
  	i = i + 1
	loop While cint(second(time)) < StartTime + cint(nSeconds)
	AddToLog("Ended wait procedure at " & CStr(Now()) )
End Sub

Sub deleteFolder(strFolder)
	dim objFSO
	
	call setAttribs(strFolder)
	Set objFSO = CreateObject("Scripting.FileSystemObject")
	on error resume next
	objFSO.DeleteFolder(strFolder)
	if err.number<0 then
		call MsgBox("An error occured while deleting folder " & strFolder & ". Error:"& CStr(err.number), 16, "Error")
		err.Clear
	end if
End Sub

Function setAttribs(strFolder)
	dim strCommand, strParms
	Dim wshell, intReturn
	strCommand = "setAttribs.cmd " & strFolder
  set wshell = createobject("wscript.shell")
  intReturn = wshell.run("%comspec% /c " & strCommand, 5, True)    	
End Function

Sub AddToLog(strText)
	const	ForAppend 	= 8
	const	LogFile		= "\\S100\LOGBOEK\NEDCARUM2\nedcarum2.log"
	const	htmSource	= "UserDelete"
	
	dim WshNetwork, fsoObj, f, strTemp
	dim strDomain, strComputer, strUsername
	dim strTime
	
	Set WshNetwork = CreateObject("WScript.Network")
	strComputer = WshNetwork.ComputerName
        strUsername = WshNetwork.UserName
	strTime = Now()
	
	Set fsoObj = CreateObject("Scripting.FileSystemObject")
   	Set f = fsoObj.OpenTextFile(LogFile, ForAppend, True)
   	strTemp = strTime & Chr(32) & htmSource & ", " & strComputer & ", " & strUsername & ", " & strText
   	f.WriteLine strTemp
   	f.Close
End Sub

Function QueryAD_User(strName)
	Dim Con, Root, Domain, sDomain, sFilter, sAttribsToReturn, sDepth 
	Dim rs, i, Path
	Dim oCommand 
	Dim objArgs
	Dim ADsObject
	Dim sADsPath
	Dim objName
	Dim objClass
	Dim objSchema
	Dim classObject

	On Error Resume Next

	'--------------------------------------------------------
	'Create the ADO connection object
	'--------------------------------------------------------
	Set Con = CreateObject("ADODB.Connection")
	Con.Provider = "ADsDSOObject"
	Con.Open "Active Directory Provider"

	'Create ADO command object for the connection.
	Set oCommand = CreateObject("ADODB.Command")
	oCommand.ActiveConnection = Con
 
	'Get the ADsPath for the domain to search. 
	Set Root = GetObject("LDAP://rootDSE")

	'---------------------------------------------------------
	'Choose the NC you want to search and build the ADsPath
	'---------------------------------------------------------
	sDomain = root.Get("rootDomainNamingContext")
	Set domain = GetObject("GC://" & sDomain)
	sADsPath = "<" & domain.ADsPath & ">"	
	 
	'--------------------------------------------------------
	'Build the search filter
	'--------------------------------------------------------
	sFilter = "(&(objectCategory=person)(objectClass=user)(Name=" & strName & "))"
  sAttribsToReturn = "distinguishedName"
	sDepth = "subtree"

	'---------------------------------------------------------
	'Assemble and execute the query
	'---------------------------------------------------------
	oCommand.CommandText = sADsPath & ";" & sFilter & ";" & sAttribsToReturn & ";" & sDepth	
	Set rs = oCommand.Execute

	'---------------------------------------------------------
	' Navigate the record set and get the object's DN
	'---------------------------------------------------------
	rs.MoveFirst
	While Not rs.EOF
    For i = 0 To rs.Fields.Count - 1
    	If rs.Fields(i).Name = "distinguishedName" Then
	    	Path = rs.Fields(i).Value
      End If        
    Next
    rs.MoveNext
	Wend

	QueryAD_User = Path

End Function

'--------------------------------------------------------

</SCRIPT>
</head>

<body class="nedcarum">
<strong>User Delete.</strong><br>
<br>
Delete users from the domain<br>
<br>
<table width="100%"  border="1" cellspacing="0" cellpadding="0">
  <tr>
    <th scope="row">

<table width="100%" border=0 align="left" cellpadding="0" cellspacing="0">
    <tr>
      <th width="25%" scope="row"><div align="left" class="nedcarum">&nbsp;User ID </div></th>
      <td width="300"><P>
         <INPUT name="UID" type="text" class="nedcarumform" id="UID" size="25" maxlength="25"
         	title="Type the user account ID you wish to delete.">
         </P></td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <th width="25%" scope="row">&nbsp;</th>
      <td width="300">&nbsp;</td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <th width="25%" scope="row">&nbsp;</th>
      <td width="300">
	  <P>
	    <input name="AddToTable" type="BUTTON" id="addtotable"
	    	title="Add the information to the users table." onclick="doAddAccountToTable" value="Add to table">
    	    <input name="ClearForm" type="BUTTON" id="clearform"
    	    	title="Clear the input form." onclick="clearForm" value="Clear form">
	  </P>
      <td>&nbsp;</td>
    </tr>
</table>
</th>
  </tr>
</table>
<br />


<table width="100%"  border="1" cellspacing="0" cellpadding="0">
  <tr>
    <th scope="row">
<table width="100%" border=1 align="left" cellpadding="0" cellspacing="0">
  <THEAD>
  <TR>
    <TH width="10%" align="left" bgcolor="#000099"><span class="nedcarumtop"><strong>&nbsp;User-ID</strong></span></TH>
    <TH align="left" bgcolor="#000099"><span class="nedcarumtop"><strong>&nbsp;DN</strong></span></TH>
    <TH align="left" bgcolor="#000099"><span class="nedcarumtop"><strong>&nbsp;Fullname</strong></span></TH>
    <TH align="left" bgcolor="#000099"><span class="nedcarumtop"><strong>&nbsp;Comment/Department</strong></span></TH>
  </TR>
  </THEAD>
  <TBODY ID = "tbDeleteUsers">
  </TBODY>
</TABLE>
</th>
  </tr>
</table>
<P>
  <input name="AddToTable" type="BUTTON" id="deleteusers"
  	title="Press this button to start deleting accounts." onclick="doDeleteUsers" value="Delete users">
  <input name="ClearTable" type="BUTTON" id="cleartable"
  	title="Clear the new users table." onclick="clearTables" value="Clear table">
</P>
<table width="100%"  border="1" cellspacing="0" cellpadding="0">
  <tr>
    <th scope="row">

<table width="100%" border=1 align="left" cellpadding="0" cellspacing="0">
  <THEAD>
  <TR>
    <TH align="left" bgcolor="#000099"><span class="nedcarumtop"><strong>&nbsp;Action</strong></span></TH>
    <TH align="left" bgcolor="#000099"><span class="nedcarumtop"><strong>&nbsp;Result</strong></span></TH>
  </TR>
  </THEAD>
  <TBODY ID = "tbDeleteProgress">
  </TBODY>
</TABLE>
</th>
  </tr>
</table>

</body>
</html>
